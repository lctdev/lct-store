#ifndef SPRI_CONSTANTS_H
#define SPRI_CONSTANTS_H

#include <foun/foun_primitives.h>

#include <pack/pack_assetHeader.h>

namespace lct
{
namespace spri
{
const pack::AssetCode GROUP_CODE = { 'S', 'P', 'R', 'I' };

const pack::AssetCode FIGURE_TYPE_CODE = { 'F', 'I', 'G', 'U' };
const pack::AssetCode SKIN_TYPE_CODE = { 'S', 'K', 'I', 'N' };
const pack::AssetCode ANIMATION_TYPE_CODE = { 'A', 'N', 'I', 'M' };

const u16 VERSION = 0;

const u32 MAX_NAME_SIZE = 32;

const u32 TEXTURE_UNIT_INDEX = 0;

enum TargetType
{
	TARGET_TYPE_PART = 0,
	TARGET_TYPE_JOINT,
	TARGET_TYPE_PATTERN
};

enum PartPropertyType
{
	PART_PROPERTY_TYPE_MODULATE_COLOR_R = 0,
	PART_PROPERTY_TYPE_MODULATE_COLOR_G,
	PART_PROPERTY_TYPE_MODULATE_COLOR_B,
	PART_PROPERTY_TYPE_MODULATE_COLOR_A,
	PART_PROPERTY_TYPE_INTERPOLATE_COLOR_R,
	PART_PROPERTY_TYPE_INTERPOLATE_COLOR_G,
	PART_PROPERTY_TYPE_INTERPOLATE_COLOR_B,
	PART_PROPERTY_TYPE_INTERPOLATE_COLOR_A,
	PART_PROPERTY_TYPE_COUNT
};

enum JointPropertyType
{
	JOINT_PROPERTY_TYPE_SCALE_X = 0,
	JOINT_PROPERTY_TYPE_SCALE_Y,
	JOINT_PROPERTY_TYPE_ROTATE,
	JOINT_PROPERTY_TYPE_TRANSLATE_X,
	JOINT_PROPERTY_TYPE_TRANSLATE_Y,
	JOINT_PROPERTY_TYPE_COUNT
};

enum JointFlagType
{
	JOINT_FLAG_TYPE_SCALE_CHILDREN = 0,
	JOINT_FLAG_TYPE_COUNT
};

enum PatternPropertyType
{
	PATTERN_PROPERTY_TYPE_TEXTURE_INDEX = 0,
	PATTERN_PROPERTY_TYPE_COUNT
};

enum CurveType
{
	CURVE_TYPE_FLAT = 0,
	CURVE_TYPE_LINEAR,
	CURVE_TYPE_HERMITE
};

enum FinishType
{
	FINISH_TYPE_HOLD = 0,
	FINISH_TYPE_LOOP
};

enum Uniform
{
	UNIFORM_PLACEMENT = 0,
	UNIFORM_JOINT_TRANSFORM,
	UNIFORM_WORLD_TRANSFORM,
	UNIFORM_PROJECTION_TRANSFORM,
	UNIFORM_MODULATE_COLOR,
	UNIFORM_INTERPOLATE_COLOR,
	UNIFORM_TEXTURE,
	UNIFORM_COUNT
};

//namespace spri
}
//namespace lct
}

#endif//SPRI_CONSTANTS_H
